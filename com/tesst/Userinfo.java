package com.tesst;
// Generated 2018-2-2 16:05:43 by Hibernate Tools 5.2.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Userinfo generated by hbm2java
 */
@Entity
@Table(name = "userinfo", catalog = "stonewalls")
public class Userinfo implements java.io.Serializable {

	private Integer uiid;
	private Posts posts;
	private User user;
	private Integer age;
	private Long brithday;
	private String signature;
	private String intro;
	private String sex;
	private String txpic;
	private String address;
	private String job;
	private String email;
	private Integer collectorsOrder;
	private Set<Comment> commentsForTargetman = new HashSet<Comment>(0);
	private Comment commentByUiid;
	private Set<LovesFans> lovesFansesForLovers = new HashSet<LovesFans>(0);
	private Set<Image> imagesForBeLong = new HashSet<Image>(0);
	private Set<Posts> postses = new HashSet<Posts>(0);
	private Set<Comment> commentsForSpokesman = new HashSet<Comment>(0);
	private Set<LovesFans> lovesFansesForFans = new HashSet<LovesFans>(0);
	private Image imageByUiid;

	public Userinfo() {
	}

	public Userinfo(Posts posts, User user, Integer age, Long brithday, String signature, String intro, String sex,
			String txpic, String address, String job, String email, Integer collectorsOrder,
			Set<Comment> commentsForTargetman, Comment commentByUiid, Set<LovesFans> lovesFansesForLovers,
			Set<Image> imagesForBeLong, Set<Posts> postses, Set<Comment> commentsForSpokesman,
			Set<LovesFans> lovesFansesForFans, Image imageByUiid) {
		this.posts = posts;
		this.user = user;
		this.age = age;
		this.brithday = brithday;
		this.signature = signature;
		this.intro = intro;
		this.sex = sex;
		this.txpic = txpic;
		this.address = address;
		this.job = job;
		this.email = email;
		this.collectorsOrder = collectorsOrder;
		this.commentsForTargetman = commentsForTargetman;
		this.commentByUiid = commentByUiid;
		this.lovesFansesForLovers = lovesFansesForLovers;
		this.imagesForBeLong = imagesForBeLong;
		this.postses = postses;
		this.commentsForSpokesman = commentsForSpokesman;
		this.lovesFansesForFans = lovesFansesForFans;
		this.imageByUiid = imageByUiid;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "UIID", unique = true, nullable = false)
	public Integer getUiid() {
		return this.uiid;
	}

	public void setUiid(Integer uiid) {
		this.uiid = uiid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COLLECTORS")
	public Posts getPosts() {
		return this.posts;
	}

	public void setPosts(Posts posts) {
		this.posts = posts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "AGE")
	public Integer getAge() {
		return this.age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	@Column(name = "BRITHDAY")
	public Long getBrithday() {
		return this.brithday;
	}

	public void setBrithday(Long brithday) {
		this.brithday = brithday;
	}

	@Column(name = "SIGNATURE")
	public String getSignature() {
		return this.signature;
	}

	public void setSignature(String signature) {
		this.signature = signature;
	}

	@Column(name = "INTRO")
	public String getIntro() {
		return this.intro;
	}

	public void setIntro(String intro) {
		this.intro = intro;
	}

	@Column(name = "SEX")
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@Column(name = "TXPIC")
	public String getTxpic() {
		return this.txpic;
	}

	public void setTxpic(String txpic) {
		this.txpic = txpic;
	}

	@Column(name = "ADDRESS")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "JOB")
	public String getJob() {
		return this.job;
	}

	public void setJob(String job) {
		this.job = job;
	}

	@Column(name = "EMAIL")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "collectors_ORDER")
	public Integer getCollectorsOrder() {
		return this.collectorsOrder;
	}

	public void setCollectorsOrder(Integer collectorsOrder) {
		this.collectorsOrder = collectorsOrder;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userinfoByTargetman")
	public Set<Comment> getCommentsForTargetman() {
		return this.commentsForTargetman;
	}

	public void setCommentsForTargetman(Set<Comment> commentsForTargetman) {
		this.commentsForTargetman = commentsForTargetman;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userinfoByUiid")
	public Comment getCommentByUiid() {
		return this.commentByUiid;
	}

	public void setCommentByUiid(Comment commentByUiid) {
		this.commentByUiid = commentByUiid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userinfoByLovers")
	public Set<LovesFans> getLovesFansesForLovers() {
		return this.lovesFansesForLovers;
	}

	public void setLovesFansesForLovers(Set<LovesFans> lovesFansesForLovers) {
		this.lovesFansesForLovers = lovesFansesForLovers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userinfoByBeLong")
	public Set<Image> getImagesForBeLong() {
		return this.imagesForBeLong;
	}

	public void setImagesForBeLong(Set<Image> imagesForBeLong) {
		this.imagesForBeLong = imagesForBeLong;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userinfo")
	public Set<Posts> getPostses() {
		return this.postses;
	}

	public void setPostses(Set<Posts> postses) {
		this.postses = postses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userinfoBySpokesman")
	public Set<Comment> getCommentsForSpokesman() {
		return this.commentsForSpokesman;
	}

	public void setCommentsForSpokesman(Set<Comment> commentsForSpokesman) {
		this.commentsForSpokesman = commentsForSpokesman;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userinfoByFans")
	public Set<LovesFans> getLovesFansesForFans() {
		return this.lovesFansesForFans;
	}

	public void setLovesFansesForFans(Set<LovesFans> lovesFansesForFans) {
		this.lovesFansesForFans = lovesFansesForFans;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "userinfoByUiid")
	public Image getImageByUiid() {
		return this.imageByUiid;
	}

	public void setImageByUiid(Image imageByUiid) {
		this.imageByUiid = imageByUiid;
	}

}
