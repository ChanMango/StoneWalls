package com.tesst;
// Generated 2018-2-2 16:05:43 by Hibernate Tools 5.2.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Posts generated by hbm2java
 */
@Entity
@Table(name = "posts", catalog = "stonewalls")
public class Posts implements java.io.Serializable {

	private Integer pid;
	private Topics topics;
	private Userinfo userinfo;
	private String title;
	private String conTop;
	private String conCenter;
	private String conButtom;
	private Long publishtime;
	private Integer likecounts;
	private Integer dislikecounts;
	private Integer readecounts;
	private Integer postsOrder;
	private Set<Image> images = new HashSet<Image>(0);
	private Set<Userinfo> userinfos = new HashSet<Userinfo>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Posts() {
	}

	public Posts(Topics topics, Userinfo userinfo, String title, String conTop, String conCenter, String conButtom,
			Long publishtime, Integer likecounts, Integer dislikecounts, Integer readecounts, Integer postsOrder,
			Set<Image> images, Set<Userinfo> userinfos, Set<Comment> comments) {
		this.topics = topics;
		this.userinfo = userinfo;
		this.title = title;
		this.conTop = conTop;
		this.conCenter = conCenter;
		this.conButtom = conButtom;
		this.publishtime = publishtime;
		this.likecounts = likecounts;
		this.dislikecounts = dislikecounts;
		this.readecounts = readecounts;
		this.postsOrder = postsOrder;
		this.images = images;
		this.userinfos = userinfos;
		this.comments = comments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "PID", unique = true, nullable = false)
	public Integer getPid() {
		return this.pid;
	}

	public void setPid(Integer pid) {
		this.pid = pid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TOPIC")
	public Topics getTopics() {
		return this.topics;
	}

	public void setTopics(Topics topics) {
		this.topics = topics;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AUTHOR")
	public Userinfo getUserinfo() {
		return this.userinfo;
	}

	public void setUserinfo(Userinfo userinfo) {
		this.userinfo = userinfo;
	}

	@Column(name = "TITLE")
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "CON_TOP")
	public String getConTop() {
		return this.conTop;
	}

	public void setConTop(String conTop) {
		this.conTop = conTop;
	}

	@Column(name = "CON_CENTER")
	public String getConCenter() {
		return this.conCenter;
	}

	public void setConCenter(String conCenter) {
		this.conCenter = conCenter;
	}

	@Column(name = "CON_BUTTOM")
	public String getConButtom() {
		return this.conButtom;
	}

	public void setConButtom(String conButtom) {
		this.conButtom = conButtom;
	}

	@Column(name = "PUBLISHTIME")
	public Long getPublishtime() {
		return this.publishtime;
	}

	public void setPublishtime(Long publishtime) {
		this.publishtime = publishtime;
	}

	@Column(name = "LIKECOUNTS")
	public Integer getLikecounts() {
		return this.likecounts;
	}

	public void setLikecounts(Integer likecounts) {
		this.likecounts = likecounts;
	}

	@Column(name = "DISLIKECOUNTS")
	public Integer getDislikecounts() {
		return this.dislikecounts;
	}

	public void setDislikecounts(Integer dislikecounts) {
		this.dislikecounts = dislikecounts;
	}

	@Column(name = "READECOUNTS")
	public Integer getReadecounts() {
		return this.readecounts;
	}

	public void setReadecounts(Integer readecounts) {
		this.readecounts = readecounts;
	}

	@Column(name = "posts_ORDER")
	public Integer getPostsOrder() {
		return this.postsOrder;
	}

	public void setPostsOrder(Integer postsOrder) {
		this.postsOrder = postsOrder;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "posts")
	public Set<Image> getImages() {
		return this.images;
	}

	public void setImages(Set<Image> images) {
		this.images = images;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "posts")
	public Set<Userinfo> getUserinfos() {
		return this.userinfos;
	}

	public void setUserinfos(Set<Userinfo> userinfos) {
		this.userinfos = userinfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "posts")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

}
