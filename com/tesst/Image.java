package com.tesst;
// Generated 2018-2-2 16:05:43 by Hibernate Tools 5.2.6.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Image generated by hbm2java
 */
@Entity
@Table(name = "image", catalog = "stonewalls", uniqueConstraints = @UniqueConstraint(columnNames = "beLong"))
public class Image implements java.io.Serializable {

	private Integer iid;
	private Posts posts;
	private Userinfo userinfoByBeLong;
	private Userinfo userinfoByUiid;
	private String imagename;
	private Long uploadtime;
	private Integer ordersuq;
	private Integer targettype;
	private String imagepath;
	private String imagedescribetion;
	private Integer imagesOrder;

	public Image() {
	}

	public Image(Userinfo userinfoByUiid) {
		this.userinfoByUiid = userinfoByUiid;
	}

	public Image(Posts posts, Userinfo userinfoByBeLong, Userinfo userinfoByUiid, String imagename, Long uploadtime,
			Integer ordersuq, Integer targettype, String imagepath, String imagedescribetion, Integer imagesOrder) {
		this.posts = posts;
		this.userinfoByBeLong = userinfoByBeLong;
		this.userinfoByUiid = userinfoByUiid;
		this.imagename = imagename;
		this.uploadtime = uploadtime;
		this.ordersuq = ordersuq;
		this.targettype = targettype;
		this.imagepath = imagepath;
		this.imagedescribetion = imagedescribetion;
		this.imagesOrder = imagesOrder;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "userinfoByUiid"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "IID", unique = true, nullable = false)
	public Integer getIid() {
		return this.iid;
	}

	public void setIid(Integer iid) {
		this.iid = iid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "POST")
	public Posts getPosts() {
		return this.posts;
	}

	public void setPosts(Posts posts) {
		this.posts = posts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "beLong", unique = true)
	public Userinfo getUserinfoByBeLong() {
		return this.userinfoByBeLong;
	}

	public void setUserinfoByBeLong(Userinfo userinfoByBeLong) {
		this.userinfoByBeLong = userinfoByBeLong;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Userinfo getUserinfoByUiid() {
		return this.userinfoByUiid;
	}

	public void setUserinfoByUiid(Userinfo userinfoByUiid) {
		this.userinfoByUiid = userinfoByUiid;
	}

	@Column(name = "IMAGENAME")
	public String getImagename() {
		return this.imagename;
	}

	public void setImagename(String imagename) {
		this.imagename = imagename;
	}

	@Column(name = "UPLOADTIME")
	public Long getUploadtime() {
		return this.uploadtime;
	}

	public void setUploadtime(Long uploadtime) {
		this.uploadtime = uploadtime;
	}

	@Column(name = "ORDERSUQ")
	public Integer getOrdersuq() {
		return this.ordersuq;
	}

	public void setOrdersuq(Integer ordersuq) {
		this.ordersuq = ordersuq;
	}

	@Column(name = "TARGETTYPE")
	public Integer getTargettype() {
		return this.targettype;
	}

	public void setTargettype(Integer targettype) {
		this.targettype = targettype;
	}

	@Column(name = "IMAGEPATH")
	public String getImagepath() {
		return this.imagepath;
	}

	public void setImagepath(String imagepath) {
		this.imagepath = imagepath;
	}

	@Column(name = "IMAGEDESCRIBETION")
	public String getImagedescribetion() {
		return this.imagedescribetion;
	}

	public void setImagedescribetion(String imagedescribetion) {
		this.imagedescribetion = imagedescribetion;
	}

	@Column(name = "images_ORDER")
	public Integer getImagesOrder() {
		return this.imagesOrder;
	}

	public void setImagesOrder(Integer imagesOrder) {
		this.imagesOrder = imagesOrder;
	}

}
