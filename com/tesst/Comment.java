package com.tesst;
// Generated 2018-2-2 16:05:43 by Hibernate Tools 5.2.6.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name = "comment", catalog = "stonewalls")
public class Comment implements java.io.Serializable {

	private Integer cid;
	private Posts posts;
	private Userinfo userinfoByTargetman;
	private Userinfo userinfoByUiid;
	private Userinfo userinfoBySpokesman;
	private String content;
	private Long spoketime;
	private Integer supportnumber;
	private Integer commentsOrder;

	public Comment() {
	}

	public Comment(Userinfo userinfoByUiid) {
		this.userinfoByUiid = userinfoByUiid;
	}

	public Comment(Posts posts, Userinfo userinfoByTargetman, Userinfo userinfoByUiid, Userinfo userinfoBySpokesman,
			String content, Long spoketime, Integer supportnumber, Integer commentsOrder) {
		this.posts = posts;
		this.userinfoByTargetman = userinfoByTargetman;
		this.userinfoByUiid = userinfoByUiid;
		this.userinfoBySpokesman = userinfoBySpokesman;
		this.content = content;
		this.spoketime = spoketime;
		this.supportnumber = supportnumber;
		this.commentsOrder = commentsOrder;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "userinfoByUiid"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "CID", unique = true, nullable = false)
	public Integer getCid() {
		return this.cid;
	}

	public void setCid(Integer cid) {
		this.cid = cid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "POST")
	public Posts getPosts() {
		return this.posts;
	}

	public void setPosts(Posts posts) {
		this.posts = posts;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TARGETMAN")
	public Userinfo getUserinfoByTargetman() {
		return this.userinfoByTargetman;
	}

	public void setUserinfoByTargetman(Userinfo userinfoByTargetman) {
		this.userinfoByTargetman = userinfoByTargetman;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Userinfo getUserinfoByUiid() {
		return this.userinfoByUiid;
	}

	public void setUserinfoByUiid(Userinfo userinfoByUiid) {
		this.userinfoByUiid = userinfoByUiid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SPOKESMAN")
	public Userinfo getUserinfoBySpokesman() {
		return this.userinfoBySpokesman;
	}

	public void setUserinfoBySpokesman(Userinfo userinfoBySpokesman) {
		this.userinfoBySpokesman = userinfoBySpokesman;
	}

	@Column(name = "CONTENT")
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "SPOKETIME")
	public Long getSpoketime() {
		return this.spoketime;
	}

	public void setSpoketime(Long spoketime) {
		this.spoketime = spoketime;
	}

	@Column(name = "SUPPORTNUMBER")
	public Integer getSupportnumber() {
		return this.supportnumber;
	}

	public void setSupportnumber(Integer supportnumber) {
		this.supportnumber = supportnumber;
	}

	@Column(name = "comments_ORDER")
	public Integer getCommentsOrder() {
		return this.commentsOrder;
	}

	public void setCommentsOrder(Integer commentsOrder) {
		this.commentsOrder = commentsOrder;
	}

}
